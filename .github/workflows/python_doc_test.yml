# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Documentation and testing

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ] #, windows-latest, macos-latest ]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
          version: "0.5.15"
          enable-cache: true

    - name: "Set up Python"
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"

    - name: Install project dependencies
      run: |
        uv sync --all-extras --dev
    
    - name: Ruff checking
      run: |
        uv run ruff check --output-format=github

    - name: Ruff formatting
      run: |
          uv run ruff format
  
    - name: Testing helpers
      run: |
        uv run pytest ./tests/test_00_helpers.py

    - name: Testing general
      run: |
        uv run pytest ./tests/test_01_general.py
    
    - name: Testing summary
      run: |
        uv run pytest ./tests/test_06_summary.py

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build HTML
      uses: ammaraskar/sphinx-action@master
      with:
        docs-folder: "docsource/"

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: html-docs
        path: docsource/build/html/

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docsource/build/html
    

  pages:
    runs-on: ubuntu-20.04
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
    - id: deployment
      uses: sphinx-notes/pages@v3