name: Deployment of executables

on: 
  push:
    branches: [ "main" ]
    #tags:
    #  - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Archive Release
      uses: thedoctor0/zip-release@0.7.5
      with:
        type: 'zip'
        filename: 'rampt.zip'
        exclusions: '*.git* /*github/* /*tests/* /*docs/* uv.lock Contribute.md'
  
  build_installer:
    env:
      os_name: None
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
    - uses: actions/checkout@master
    
    - name: Check matrix os
      run: echo ${{ matrix.os }} 

    - name: Adjust os name linux
      if: ${{ matrix.os }} == ubuntu-latest
      run: echo "os_name=linux" >> $GITHUB_ENV

    - name: Adjust os name mac
      if: ${{ matrix.os }} == macos-latest
      run: echo "os_name=macos" >> $GITHUB_ENV

    - name: Adjust os name windows
      if: ${{ matrix.os }} == windows-latest
      run: echo "os_name=windows" >> $GITHUB_ENV
      
    - name: Check os
      run: echo ${{ env.os_name }}

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
          version: "0.5.15"
          enable-cache: true

    - name: "Set up Python"
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"

    - name: Install project dependencies
      run: |
        uv sync

    - name: "Make installer"
      run: |
        uv run pyinstaller --noconfirm --clean --onefile --windowed --name installer_${{ env.os_name }} --contents-directory .  rampt/installer.py
      
    - uses: actions/upload-artifact@v4
      with:
        name: rampt_installer_${{ env.os_name }}
        path: dist/installer_${{ env.os_name }}

  deploy:
    needs: [ build, build_installer ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    
    - name: Upload Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "rampt_installer_linux,rampt_installer_macos,rampt_installer_windows,rampt.zip"
        bodyFile: "CHANGELOG.md"
        token: ${{ secrets.GITHUB_TOKEN }}